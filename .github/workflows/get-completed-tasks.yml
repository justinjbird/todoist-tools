## notes
## - can include project_id filter
## - perhaps include handling of offset
## https://developer.todoist.com/sync/v9/#get-all-completed-items

name: get-completed-tasks

on:
  workflow_call:
    inputs:
      since:
        type: string
        description: 'Since when to get completed tasks'
        required: false
        default: 1900-01-01T00:00
      until:
        type: string
        description: 'Until when to get completed tasks'
        required: false
        default: 1900-01-01T00:00
      url:
        type: string
        description: 'URL of the Todoist API'
        required: false
        default: https://api.todoist.com/sync/v9/completed/get_all
    secrets:
      token:
        required: true

jobs:
  get-completed-tasks:
    runs-on: ubuntu-latest
    steps:
      - id: step1
        name: Get Completed Tasks
        run: |                
          # if dates not passed, default to 14 days ago and today
          if ('${{ secrets.token }}' -eq '1900-01-01T00:00') {
            $since = (get-date).AddDays(-14).ToString('yyyy-MM-ddT00:00')
          }
          else {
            $since = '${{ inputs.since }}'
          }
          if ('${{ inputs.until }}' -eq '1900-01-01T00:00') {
            $until = (get-date).AddDays(1).ToString('yyyy-MM-ddT00:00')
          }
          else {
            $until = '${{ inputs.until }}'
          }

          # get tasks, save as json
          $output = (curl https://api.todoist.com/sync/v9/completed/get_all -d since="$($since)" -d until="$($until)" -d limit=200 -H "Authorization: Bearer ${{ secrets.token }}")

          # output clean object to csv
          if ($output) {
            ($output | ConvertFrom-Json).Items | Export-Csv -Path tasks.csv
          }
          
          
          # output string
          echo "tasks=$output" >> "$GITHUB_OUTPUT"



        shell: pwsh

      - name: upload tasks.csv
        uses: actions/upload-artifact@v2
        with:
          name: tasks.csv
          path: tasks.csv

      - name: upload response.txt
        uses: actions/upload-artifact@v2
        with:
          name: response.txt
          path: response.txt
        if: success() || failure()